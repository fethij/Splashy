[versions]

kotlin = "1.9.0"
agp = "8.1.0"
compose = "1.4.3"
androidx-appcompat = "1.6.1"
androidx-activityCompose = "1.7.2"
compose-uitooling = "1.4.3"
libres = "1.1.8"
voyager = "1.0.0-rc06"
composeImageLoader = "1.4.1"
napier = "2.6.1"
buildConfig = "3.1.0"
kotlinx-coroutines = "1.7.2"
insetsx = "0.1.0-alpha10"
ktor = "2.3.2"
composeIcons = "1.1.0"
kotlinx-serialization = "1.5.1"
multiplatformSettings = "1.0.0"
kotlin-inject = "0.6.1"
ksp = "1.9.0-1.0.12"
sqlDelight = "2.0.0-alpha05"
kamel = "0.6.0"
materialKolor = "1.2.0"
spotless = "6.20.0"
ktfmt = "0.44"
decompose = "2.1.0-compose-experimental-alpha-05"
essenty = "1.2.0-alpha-03"
parcelize-darwin = "0.1.4"

[libraries]

androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-uitooling" }
libres = { module = "io.github.skeptick.libres:libres-compose", version.ref = "libres" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "composeImageLoader" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
insetsx = { module = "com.moriatsushi.insetsx:insetsx", version.ref = "insetsx" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
composeIcons-featherIcons = { module = "br.com.devsrsouza.compose.icons:feather", version.ref = "composeIcons" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
kotlin-inject-compiler = { module = 'me.tatarka.inject:kotlin-inject-compiler-ksp', version.ref = 'kotlin-inject' }
kotlin-inject-runtime = { module = 'me.tatarka.inject:kotlin-inject-runtime', version.ref = 'kotlin-inject' }
sqlDelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-driver-sqljs = { module = "app.cash.sqldelight:sqljs-driver", version.ref = "sqlDelight" }
kamel-image = { module = "media.kamel:kamel-image", version.ref = "kamel"}
materialKolor = { module = "com.materialkolor:material-kolor", version.ref = "materialKolor" }
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extensions-compose-jetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose"}
decompose-extensions-android = { module = "com.arkivanov.decompose:extensions-android", version.ref = "decompose" }
essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
essenty-state-keeper = { module = "com.arkivanov.essenty:state-keeper", version.ref = "essenty" }
essenty-parcelable = { module = "com.arkivanov.essenty:parcelable", version.ref = "essenty" }

[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
libres = { id = "io.github.skeptick.libres", version.ref = "libres" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
parcelize-darwin = { id = "com.arkivanov.parcelize.darwin", version.ref = "parcelize-darwin"}
ksp = { id = 'com.google.devtools.ksp', version.ref = 'ksp' }